name: Nuget Package Publish

run-name: ${{ github.actor }} is running Nuget Publish

on: [push]

env:
  POLYGON_TOKEN: ${{ secrets.POLYGON_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
        matrix:
            dotnet: ['2.1.x', '6.0.x', '8.0.x']
    name: Dotnet ${{ matrix.dotnet }} build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet }}
      - run: |
          dotnet clean
          dotnet restore
          dotnet build

  test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
        matrix:
            dotnet: ['2.1.x', '6.0.x', '8.0.x']
    name: Dotnet ${{ matrix.dotnet }} test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '${{ matrix.dotnet }}'
      - run: |
          dotnet test

  package:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '2.1.x'
      - run: dotnet pack

  publish_clients_prerelease:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths0filter@v2
        id: filter
        with:
          filters: |
            clients:
              - './Polygon.Client/**'
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '2.1.x'
      - if: steps.filter.outputs.clients == 'true'
        run: dotnet nuget push
      - if: steps.filter.outputs.clients != 'true'
        run: echo "No Polygon.Client changes - Skipping Publish."
    

  # publish_release:
  #   runs-on: ubuntu-latest